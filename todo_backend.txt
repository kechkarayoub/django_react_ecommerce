Create backend/local_settings.py with this content:
    import os
    from datetime import timedelta
    from pathlib import Path
    # Build paths inside the project like this: BASE_DIR / 'subdir'.
    BASE_DIR = Path(__file__).resolve().parent.parent
    # Quick-start development settings - unsuitable for production
    # See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/
    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = True
    ENVIRONEMENT = "dev"
    # Database
    # https://docs.djangoproject.com/en/3.1/ref/settings/#databases
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'proshop',
            'USER': 'dennisivy',
            'PASSWORD': os.environ.get('DB_PASS'),
            'HOST': os.environ.get('HOST'),
            'PORT': '5432'
        }
    }
    # sendgrid django setting
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
    EMAIL_HOST = 'smtp.gmail.com'
    EMAIL_USE_TLS = True
    EMAIL_PORT = 587
    EMAIL_HOST_USER = 'your_account@gmail.com'
    EMAIL_HOST_PASSWORD = 'your accountâ€™s password'
    EMAIL_FROM_ADDRESS = 'edxkls2019@gmail.com'
    BACKEND_URL = "http://localhost:8080"
    FRONT_URL = "http://localhost:3000"
    ACTIVATE_SOCIAL_NETWORK_PAGES = True
    SHOW_UNSUBSCRIBE_LINK_ON_EMAILS = True
    EMAIL_SMTP_PROVIDER = "gmail"

    SENDPLUSE_REST_API_ID = ""
    SENDPLUSE_REST_API_SECRET = ""
    SENDPLUSE_TOKEN_STORAGE = ""
    SENDPLUSE_MEMCACHED_HOST = ""



Create newsletter script to add it to crontab:
    Create send_newsletter.sh:
        #!/bin/bash
        cd /path/to/your/django/project
        source venv/bin/activate  # Activate your virtual environment
        python manage.py send_products_newsletters
    chmod +x send_newsletter.sh
    Run "crontab -e":
        Convert 5 AM GMT to your server's local time.
        Add this line:
            0 5 * * * /path/to/your/send_newsletter.sh  #  Run the newsletter script daily at 5 AM GMT



Configure webserver to serve media files:
    You need to configure your web server (e.g., Nginx, Apache) to serve media files from the directory specified by MEDIA_ROOT.

Change data in settings.py


